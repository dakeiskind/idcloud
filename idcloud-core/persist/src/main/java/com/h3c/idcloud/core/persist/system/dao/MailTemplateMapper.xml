<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.h3c.idcloud.core.persist.system.dao.MailTemplateMapper">
	<resultMap id="BaseResultMap" type="com.h3c.idcloud.core.pojo.dto.system.MailTemplate">
		<id column="MAIL_TEMPLATE_SID" property="mailTemplateSid" jdbcType="BIGINT" />
		<result column="MAIL_TEMPLATE_ID" property="mailTemplateId"
			jdbcType="VARCHAR" />
		<result column="MAIL_TEMPLATE_NAME" property="mailTemplateName"
			jdbcType="VARCHAR" />
		<result column="MAIL_SUBJECT" property="mailSubject" jdbcType="VARCHAR" />
		<result column="MAIL_CONTENT" property="mailContent" jdbcType="VARCHAR" />
		<result column="MAIL_CONTENT_FILE_PATH" property="mailContentFilePath"
			jdbcType="VARCHAR" />
		<result column="CREATED_BY" property="createdBy" jdbcType="VARCHAR" />
		<result column="CREATED_DT" property="createdDt" jdbcType="TIMESTAMP" />
		<result column="UPDATED_BY" property="updatedBy" jdbcType="VARCHAR" />
		<result column="UPDATED_DT" property="updatedDt" jdbcType="TIMESTAMP" />
		<result column="VERSION" property="version" jdbcType="BIGINT" />
	</resultMap>
	<resultMap id="VmMailInfo" type="com.h3c.idcloud.core.pojo.dto.system.MailInfo">
		<result column="MAIL_SUBJECT" property="mailSubject" jdbcType="VARCHAR" />
		<result column="MAIL_CONTENT_FILE_PATH" property="mailContentFilePath"
			jdbcType="VARCHAR" />
		<result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
		<result column="TENANT_NAME" property="tenantName" jdbcType="VARCHAR" />
		<result column="USER_EMAIL" property="userEmail" jdbcType="VARCHAR" />
		<result column="TENANT_EMAIL" property="tenantEmail" jdbcType="VARCHAR" />
		<result column="VM_NAME" property="vmName" jdbcType="VARCHAR" />
		<result column="INTRANET_IP" property="intranetIp" jdbcType="VARCHAR" />
		<result column="DATA_DISK" property="dataDisk" jdbcType="BIGINT" />
		<result column="OS_TYPE_NAME" property="osName" jdbcType="VARCHAR" />
		<result column="ALLOCATE_IP" property="vmIp" jdbcType="VARCHAR" />
		<result column="CPU_CORES" property="cpuCores" jdbcType="BIGINT" />
		<result column="MEMORY_SIZE" property="memorySize" jdbcType="BIGINT" />
		<result column="MANAGEMENT_ACCOUNT" property="managementAccount"
			jdbcType="VARCHAR" />
		<result column="MANAGEMENT_PASSWORD" property="managementPassword"
			jdbcType="VARCHAR" />
		<result column="SERVICE_NAME" property="serviceName" jdbcType="VARCHAR" />
		<result column="ORDER_ID" property="orderId" jdbcType="VARCHAR" />
		<result column="ALLOCATE_DISK_SIZE" property="allocateDiskSize" jdbcType="BIGINT" />
	    <result column="VOLUME_TYPE_NAME" property="volumeTypeName" jdbcType="VARCHAR" />
	    <result column="DREDGE_DATE" property="dredgeDate" jdbcType="TIMESTAMP" />
	    <result column="EXPIRING_DATE" property="expiringDate"	jdbcType="TIMESTAMP" />
	    <result column="ALLOCATE_DOMAIN" property="allocateDomain" jdbcType="VARCHAR" />
    	<result column="USER_AMOUNT" property="userAmount" jdbcType="BIGINT" />
    	<result column="SINGLE_MAILBOX_CAPACITY" property="singleMailboxCapacity" jdbcType="BIGINT" />
    	<result column="ALLOCATE_STORAGE_CAPACITY" property="allocateStorageCapacity" jdbcType="BIGINT" />
    	<result column="ALLOCATE_SHAREPOINT_ADDRESS" property="allocateSharepointAddress" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="UserMailMap" type="com.h3c.idcloud.core.pojo.dto.system.MailInfo">
		<result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
		<result column="TENANT_NAME" property="tenantName" jdbcType="VARCHAR" />
		<result column="USER_EMAIL" property="userEmail" jdbcType="VARCHAR" />
		<result column="VM_NAME" property="vmName"	jdbcType="VARCHAR" />
		<result column="SERVICE_NAME" property="serviceName" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="Example_Where_Clause">
		<trim prefix="where" prefixOverrides="and|or">
			<if test="condition.mailTemplateId != null">
				and MAIL_TEMPLATE_ID = #{condition.mailTemplateId}
			</if>
			<if test="condition.mailTemplateName != null">
				and MAIL_TEMPLATE_NAME = #{condition.mailTemplateName}
			</if>
			<if test="condition.mailSubject != null">
				and MAIL_SUBJECT = #{condition.mailSubject}
			</if>
			<if test="condition.mailContent != null">
				and MAIL_CONTENT = #{condition.mailContent}
			</if>
			<if test="condition.mailContentFilePath != null">
				and MAIL_CONTENT_FILE_PATH = #{condition.mailContentFilePath}
			</if>
			<if test="condition.createdBy != null">
				and CREATED_BY = #{condition.createdBy}
			</if>
			<if test="condition.createdDt != null">
				and CREATED_DT = #{condition.createdDt}
			</if>
			<if test="condition.updatedBy != null">
				and UPDATED_BY = #{condition.updatedBy}
			</if>
			<if test="condition.updatedDt != null">
				and UPDATED_DT = #{condition.updatedDt}
			</if>
			<if test="condition.version != null">
				and VERSION = #{condition.version}
			</if>
		</trim>
	</sql>
	<sql id="Base_Column_List">
		MAIL_TEMPLATE_SID, MAIL_TEMPLATE_ID, MAIL_TEMPLATE_NAME, MAIL_SUBJECT, MAIL_CONTENT,
		MAIL_CONTENT_FILE_PATH, CREATED_BY, CREATED_DT, UPDATED_BY,
		UPDATED_DT, VERSION
	</sql>
	<select id="selectByParams" resultMap="BaseResultMap"
		parameterType="com.h3c.idcloud.infrastructure.common.pojo.Criteria">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from sys_m_mail_template
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<include refid="common.Mysql_Pagination_Limit" />
	</select>
	<select id="selectVmMailInfo" resultMap="VmMailInfo"
		parameterType="com.h3c.idcloud.infrastructure.common.pojo.Criteria">
		SELECT
		A.ORDER_ID,
		C.MAIL_SUBJECT,
		C.MAIL_CONTENT_FILE_PATH,
		D.RES_INSTANCE_NAME AS VM_NAME,
		E.CPU_CORES,
		E.MEMORY_SIZE,
		E.MANAGEMENT_ACCOUNT,
		E.MANAGEMENT_PASSWORD,
		F.REAL_NAME AS USER_NAME,
		F.EMAIL AS USER_EMAIL,
		G.TENANT_NAME AS TENANT_NAME,
		G.EMAIL AS TENANT_EMAIL,
		H.CODE_DISPLAY AS OS_TYPE_NAME,
		I.SERVICE_NAME,
		J.ALLOCATE_IP AS INTRANET_IP,
		J.ALLOCATE_PUBLIC_IP AS ALLOCATE_IP
		FROM
		SERVICE_INSTANCE A
		INNER JOIN SERVICE_CONFIG B ON (
		A.SERVICE_SID = B.SERVICE_SID
		AND B. NAME = #{condition.name}
		)
		INNER JOIN sys_m_mail_template C ON (C.MAIL_TEMPLATE_ID = B.VALUE)
		INNER JOIN resource_instance D ON (
		D.RES_INSTANCE_TYPE = 'RES-INST-VM'
		AND D.SERVICE_INSTANCE_SID = A.INSTANCE_SID
		)
		INNER JOIN resource_instance_vm E ON (
		E.RES_INSTANCE_SID = D.RES_INSTANCE_SID
		)
		LEFT JOIN sys_m_user F ON (F.ACCOUNT = A.OWNER_ID)
		LEFT JOIN sys_m_tenant G ON (A.TANENT_ID = G.TENANT_SID)
		LEFT JOIN sys_m_code H ON (
		H.CODE_CATEGORY = 'OS_TYPE'
		AND H.CODE_VALUE = E.OS_TYPE
		)
		LEFT JOIN service I ON (
		I.SERVICE_SID = A.SERVICE_SID
		)
		LEFT JOIN resource_instance_ip J ON (
		J.RES_INSTANCE_SID = E.RES_INSTANCE_IP_SID
		)
		where
		A.INSTANCE_SID = #{condition.serviceInstanceSid}
	</select>
	<select id="selectStorageMailInfo" resultMap="VmMailInfo"
		parameterType="com.h3c.idcloud.infrastructure.common.pojo.Criteria">
		SELECT
		A.ORDER_ID,
		A.DREDGE_DATE,
		A.EXPIRING_DATE,
		C.MAIL_SUBJECT,
		C.MAIL_CONTENT_FILE_PATH,
		D.RES_INSTANCE_NAME AS VM_NAME,
		E.ALLOCATE_DISK_SIZE,
		F.REAL_NAME AS USER_NAME,
		F.EMAIL AS USER_EMAIL,
		G.TENANT_NAME AS TENANT_NAME,
		G.EMAIL AS TENANT_EMAIL,
		I.SERVICE_NAME,
		Y.CODE_DISPLAY AS VOLUME_TYPE_NAME
		FROM
		SERVICE_INSTANCE A
		INNER JOIN SERVICE_CONFIG B ON (
		A.SERVICE_SID = B.SERVICE_SID
		AND B. NAME = #{condition.name}
		)
		INNER JOIN sys_m_mail_template C ON (C.MAIL_TEMPLATE_ID = B.VALUE)
		INNER JOIN resource_instance D ON (
		D.RES_INSTANCE_TYPE = 'RES-INST-STORAGE'
		AND D.SERVICE_INSTANCE_SID = A.INSTANCE_SID
		)
		INNER JOIN resource_instance_storage E ON (
		E.RES_INSTANCE_SID = D.RES_INSTANCE_SID
		)
		INNER JOIN resource_storage Z ON (
		E.ALLOCATE_RES_STORAGE_SID = Z.RES_SID
		)
		LEFT JOIN sys_m_code Y ON (
		Z.VOLUME_TYPE = Y.CODE_VALUE AND Y.CODE_CATEGORY = 'STORAGE_TYPE' 
		)
		LEFT JOIN sys_m_user F ON (F.ACCOUNT = A.OWNER_ID)
		LEFT JOIN sys_m_tenant G ON (A.TANENT_ID = G.TENANT_SID)
		LEFT JOIN service I ON (
		I.SERVICE_SID = A.SERVICE_SID
		)
		where
		A.INSTANCE_SID = #{condition.serviceInstanceSid}
	</select>
	<select id="selectExMailInfo" resultMap="VmMailInfo"
		parameterType="com.h3c.idcloud.infrastructure.common.pojo.Criteria">
		SELECT
		A.ORDER_ID,
		A.DREDGE_DATE,
		A.EXPIRING_DATE,
		C.MAIL_SUBJECT,
		C.MAIL_CONTENT_FILE_PATH,
		D.RES_INSTANCE_NAME AS VM_NAME,
		E.ALLOCATE_DOMAIN,
		E.SINGLE_MAILBOX_CAPACITY,
		E.USER_AMOUNT,
		F.REAL_NAME AS USER_NAME,
		F.EMAIL AS USER_EMAIL,
		G.TENANT_NAME AS TENANT_NAME,
		G.EMAIL AS TENANT_EMAIL,
		I.SERVICE_NAME
		FROM
		SERVICE_INSTANCE A
		INNER JOIN SERVICE_CONFIG B ON (
		A.SERVICE_SID = B.SERVICE_SID
		AND B. NAME = #{condition.name}
		)
		INNER JOIN sys_m_mail_template C ON (C.MAIL_TEMPLATE_ID = B.VALUE)
		INNER JOIN resource_instance D ON (
		D.RES_INSTANCE_TYPE = 'RES-INST-EXCHANGE'
		AND D.SERVICE_INSTANCE_SID = A.INSTANCE_SID
		)
		INNER JOIN resource_instance_exchange E ON (
		E.RES_INSTANCE_SID = D.RES_INSTANCE_SID
		)
		INNER JOIN resource_exchange Z ON (
		E.ALLOCATE_RES_EXCHANGE_SID = Z.RES_SID
		)
		LEFT JOIN sys_m_user F ON (F.ACCOUNT = A.OWNER_ID)
		LEFT JOIN sys_m_tenant G ON (A.TANENT_ID = G.TENANT_SID)
		LEFT JOIN service I ON (
		I.SERVICE_SID = A.SERVICE_SID
		)
		where
		A.INSTANCE_SID = #{condition.serviceInstanceSid}
	</select>
	<select id="selectSpMailInfo" resultMap="VmMailInfo"
		parameterType="com.h3c.idcloud.infrastructure.common.pojo.Criteria">
		SELECT
		A.ORDER_ID,
		A.DREDGE_DATE,
		A.EXPIRING_DATE,
		C.MAIL_SUBJECT,
		C.MAIL_CONTENT_FILE_PATH,
		D.RES_INSTANCE_NAME AS VM_NAME,
		E.ALLOCATE_STORAGE_CAPACITY,
		E.ALLOCATE_SHAREPOINT_ADDRESS,
		F.REAL_NAME AS USER_NAME,
		F.EMAIL AS USER_EMAIL,
		G.TENANT_NAME AS TENANT_NAME,
		G.EMAIL AS TENANT_EMAIL,
		I.SERVICE_NAME
		FROM
		SERVICE_INSTANCE A
		INNER JOIN SERVICE_CONFIG B ON (
		A.SERVICE_SID = B.SERVICE_SID
		AND B. NAME = #{condition.name}
		)
		INNER JOIN sys_m_mail_template C ON (C.MAIL_TEMPLATE_ID = B.VALUE)
		INNER JOIN resource_instance D ON (
		D.RES_INSTANCE_TYPE = 'RES-INST-SHAREPOINT'
		AND D.SERVICE_INSTANCE_SID = A.INSTANCE_SID
		)
		INNER JOIN resource_instance_sharepoint E ON (
		E.RES_INSTANCE_SID = D.RES_INSTANCE_SID
		)
		INNER JOIN resource_sharepoint Z ON (
		E.ALLOCATE_RES_STORAGE_SID = Z.RES_SID
		)
		LEFT JOIN sys_m_user F ON (F.ACCOUNT = A.OWNER_ID)
		LEFT JOIN sys_m_tenant G ON (A.TANENT_ID = G.TENANT_SID)
		LEFT JOIN service I ON (
		I.SERVICE_SID = A.SERVICE_SID
		)
		where
		A.INSTANCE_SID = #{condition.serviceInstanceSid}
	</select>
	<select id="selectDeploymentMailInfo" resultMap="VmMailInfo"
		parameterType="com.h3c.idcloud.infrastructure.common.pojo.Criteria">
		SELECT
		A.ORDER_ID,
		C.MAIL_SUBJECT,
		C.MAIL_CONTENT_FILE_PATH,
		D.RES_INSTANCE_NAME AS VM_NAME,
		E.CPU_CORES,
		E.MEMORY_SIZE,
		E.MANAGEMENT_ACCOUNT,
		E.MANAGEMENT_PASSWORD,
		F.REAL_NAME AS USER_NAME,
		F.EMAIL AS USER_EMAIL,
		G.TENANT_NAME AS TENANT_NAME,
		G.EMAIL AS TENANT_EMAIL,
		H.CODE_DISPLAY AS OS_TYPE_NAME,
		I.SERVICE_NAME,
		J.ALLOCATE_IP AS INTRANET_IP,
		J.ALLOCATE_PUBLIC_IP AS ALLOCATE_IP
		FROM
		SERVICE_INSTANCE A
		INNER JOIN SERVICE_CONFIG B ON (
		A.SERVICE_SID = B.SERVICE_SID
		AND B. NAME = #{condition.name}
		)
		INNER JOIN sys_m_mail_template C ON (C.MAIL_TEMPLATE_ID = B.VALUE)
		INNER JOIN resource_instance D ON (
		D.RES_INSTANCE_TYPE = 'RES-INST-VM'
		AND D.SERVICE_INSTANCE_SID = A.INSTANCE_SID
		)
		INNER JOIN resource_instance_vm E ON (
		E.RES_INSTANCE_SID = D.RES_INSTANCE_SID
		)
		LEFT JOIN sys_m_user F ON (F.ACCOUNT = A.OWNER_ID)
		LEFT JOIN sys_m_tenant G ON (A.TANENT_ID = G.TENANT_SID)
		LEFT JOIN sys_m_code H ON (
		H.CODE_CATEGORY = 'OS_TYPE'
		AND H.CODE_VALUE = E.OS_TYPE
		)
		LEFT JOIN service I ON (
		I.SERVICE_SID = A.SERVICE_SID
		)
		LEFT JOIN resource_instance_ip J ON (
		J.RES_INSTANCE_SID = E.RES_INSTANCE_IP_SID
		)
		where
		A.INSTANCE_SID = #{condition.serviceInstanceSid}
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from sys_m_mail_template
		where MAIL_TEMPLATE_SID = #{mailTemplateSid}
	</select>
	<select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from sys_m_mail_template
		where MAIL_TEMPLATE_ID = #{mailTemplateId}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from sys_m_mail_template
		where MAIL_TEMPLATE_SID = #{mailTemplateSid}
	</delete>
	<delete id="deleteByParams" parameterType="com.h3c.idcloud.infrastructure.common.pojo.Criteria">
		delete from sys_m_mail_template
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.h3c.idcloud.core.pojo.dto.system.MailTemplate">
		<selectKey resultType="java.lang.Long" keyProperty="mailTemplateSid"
			order="BEFORE">
			SELECT NEXTVAL('SEQ_SYS_M_MAIL_TEMPLATE')
		</selectKey>
		insert into sys_m_mail_template (MAIL_TEMPLATE_SID, MAIL_TEMPLATE_ID,
		MAIL_TEMPLATE_NAME, MAIL_SUBJECT,
		MAIL_CONTENT, MAIL_CONTENT_FILE_PATH, CREATED_BY, CREATED_DT, UPDATED_BY,
		UPDATED_DT, VERSION)
		values (#{mailTemplateSid}, #{mailTemplateId}, #{mailTemplateName},
		#{mailSubject},
		#{mailContent}, #{mailContentFilePath}, #{createdBy}, #{createdDt}, #{updatedBy},
		#{updatedDt}, #{version})
	</insert>
	<insert id="insertSelective" parameterType="com.h3c.idcloud.core.pojo.dto.system.MailTemplate">
		<selectKey resultType="java.lang.Long" keyProperty="mailTemplateSid"
			order="BEFORE">
			SELECT NEXTVAL('SEQ_SYS_M_MAIL_TEMPLATE')
		</selectKey>
		insert into sys_m_mail_template
		<trim prefix="(" suffix=")" suffixOverrides=",">
			MAIL_TEMPLATE_SID,
			<if test="mailTemplateId != null">
				MAIL_TEMPLATE_ID,
			</if>
			<if test="mailTemplateName != null">
				MAIL_TEMPLATE_NAME,
			</if>
			<if test="mailSubject != null">
				MAIL_SUBJECT,
			</if>
			<if test="mailContent != null">
				MAIL_CONTENT,
			</if>
			<if test="mailContentFilePath != null">
				MAIL_CONTENT_FILE_PATH,
			</if>
			<if test="createdBy != null">
				CREATED_BY,
			</if>
			<if test="createdDt != null">
				CREATED_DT,
			</if>
			<if test="updatedBy != null">
				UPDATED_BY,
			</if>
			<if test="updatedDt != null">
				UPDATED_DT,
			</if>
			<if test="version != null">
				VERSION,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{mailTemplateSid},
			<if test="mailTemplateId != null">
				#{mailTemplateId},
			</if>
			<if test="mailTemplateName != null">
				#{mailTemplateName},
			</if>
			<if test="mailSubject != null">
				#{mailSubject},
			</if>
			<if test="mailContent != null">
				#{mailContent},
			</if>
			<if test="mailContentFilePath != null">
				#{mailContentFilePath},
			</if>
			<if test="createdBy != null">
				#{createdBy},
			</if>
			<if test="createdDt != null">
				#{createdDt},
			</if>
			<if test="updatedBy != null">
				#{updatedBy},
			</if>
			<if test="updatedDt != null">
				#{updatedDt},
			</if>
			<if test="version != null">
				#{version},
			</if>
		</trim>
	</insert>
	<select id="countByParams" parameterType="com.h3c.idcloud.infrastructure.common.pojo.Criteria"
		resultType="java.lang.Integer">
		select count(*) from sys_m_mail_template
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByParamsSelective" parameterType="map">
		update sys_m_mail_template
		<set>
			<if test="record.mailTemplateSid != null">
				MAIL_TEMPLATE_SID = #{record.mailTemplateSid},
			</if>
			<if test="record.mailTemplateId != null">
				MAIL_TEMPLATE_ID = #{record.mailTemplateId},
			</if>
			<if test="record.mailTemplateName != null">
				MAIL_TEMPLATE_NAME = #{record.mailTemplateName},
			</if>
			<if test="record.mailSubject != null">
				MAIL_SUBJECT = #{record.mailSubject},
			</if>
			<if test="record.mailContent != null">
				MAIL_CONTENT = #{record.mailContent},
			</if>
			<if test="record.mailContentFilePath != null">
				MAIL_CONTENT_FILE_PATH = #{record.mailContentFilePath},
			</if>
			<if test="record.createdBy != null">
				CREATED_BY = #{record.createdBy},
			</if>
			<if test="record.createdDt != null">
				CREATED_DT = #{record.createdDt},
			</if>
			<if test="record.updatedBy != null">
				UPDATED_BY = #{record.updatedBy},
			</if>
			<if test="record.updatedDt != null">
				UPDATED_DT = #{record.updatedDt},
			</if>
			<if test="record.version != null">
				VERSION = #{record.version},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByParams" parameterType="map">
		update sys_m_mail_template
		set MAIL_TEMPLATE_SID = #{record.mailTemplateSid},
		MAIL_TEMPLATE_ID = #{record.mailTemplateId},
		MAIL_TEMPLATE_NAME = #{record.mailTemplateName},
		MAIL_SUBJECT = #{record.mailSubject},
		MAIL_CONTENT = #{record.mailContent},
		MAIL_CONTENT_FILE_PATH = #{record.mailContentFilePath},
		CREATED_BY = #{record.createdBy},
		CREATED_DT = #{record.createdDt},
		UPDATED_BY = #{record.updatedBy},
		UPDATED_DT = #{record.updatedDt},
		VERSION = #{record.version}
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.h3c.idcloud.core.pojo.dto.system.MailTemplate">
		update sys_m_mail_template
		<set>
			<if test="mailTemplateId != null">
				MAIL_TEMPLATE_ID = #{mailTemplateId},
			</if>
			<if test="mailTemplateName != null">
				MAIL_TEMPLATE_NAME = #{mailTemplateName},
			</if>
			<if test="mailSubject != null">
				MAIL_SUBJECT = #{mailSubject},
			</if>
			<if test="mailContent != null">
				MAIL_CONTENT = #{mailContent},
			</if>
			<if test="mailContentFilePath != null">
				MAIL_CONTENT_FILE_PATH = #{mailContentFilePath},
			</if>
			<if test="createdBy != null">
				CREATED_BY = #{createdBy},
			</if>
			<if test="createdDt != null">
				CREATED_DT = #{createdDt},
			</if>
			<if test="updatedBy != null">
				UPDATED_BY = #{updatedBy},
			</if>
			<if test="updatedDt != null">
				UPDATED_DT = #{updatedDt},
			</if>
			<if test="version != null">
				VERSION = #{version},
			</if>
		</set>
		where MAIL_TEMPLATE_SID = #{mailTemplateSid}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.h3c.idcloud.core.pojo.dto.system.MailTemplate">
		update sys_m_mail_template
		set MAIL_TEMPLATE_ID = #{mailTemplateId},
		MAIL_TEMPLATE_NAME = #{mailTemplateName},
		MAIL_SUBJECT = #{mailSubject},
		MAIL_CONTENT = #{mailContent},
		MAIL_CONTENT_FILE_PATH = #{mailContentFilePath},
		CREATED_BY = #{createdBy},
		CREATED_DT = #{createdDt},
		UPDATED_BY = #{updatedBy},
		UPDATED_DT = #{updatedDt},
		VERSION = #{version}
		where MAIL_TEMPLATE_SID = #{mailTemplateSid}
	</update>
	
	<select id="selectFreeResMailInfo" resultMap="UserMailMap"	parameterType="com.h3c.idcloud.infrastructure.common.pojo.Criteria">
		SELECT
			biz.`NAME` TENANT_NAME,
			biz2.`NAME` SERVICE_NAME,
			free.RES_NAME VM_NAME,
			muser.EMAIL USER_EMAIL,
			muser.ACCOUNT USER_NAME
		FROM
			free_res free
		LEFT JOIN sys_m_biz biz ON biz.BIZ_SID = free.FBIZ_SID
		LEFT JOIN sys_m_biz biz2 ON biz2.BIZ_SID = free.SBIZ_SID
		JOIN service_inst_res in_tes ON in_tes.RES_ID = free.RES_SID
		JOIN service_instance inst ON inst.INSTANCE_SID = in_tes.INSTANCE_SID
		LEFT JOIN sys_m_user muser ON muser.ACCOUNT = inst.OWNER_ID
		WHERE
			free.FRES_SID = #{condition.fresSid}
	</select>
	
</mapper>