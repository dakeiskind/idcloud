<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.h3c.idcloud.core.persist.res.dao.ResBizVmMapper" >
  <resultMap id="BaseResultMap" type="com.h3c.idcloud.core.pojo.dto.res.ResBizVm" >
    <id column="RES_VM_SID" property="resBizVmSid" jdbcType="VARCHAR" />
    <result column="VM_NAME" property="vmName" jdbcType="VARCHAR" />
    <result column="CPU_CORES" property="cpuCores" jdbcType="INTEGER" />
    <result column="MEMORY_SIZE" property="memorySize" jdbcType="BIGINT" />
    <result column="OS_VERSION" property="osVersion" jdbcType="VARCHAR" />
    <result column="ALLOCATE_RES_HOST_SID" property="allocateResHostSid" jdbcType="VARCHAR" />
    <result column="ALLOCATE_RES_STORAGE_SID" property="allocateResStorageSid" jdbcType="VARCHAR" />
    <result column="OWNER_HOST" property="ownerHost" jdbcType="VARCHAR" />
    <result column="MANAGEMENT_ACCOUNT" property="managementAccount" jdbcType="VARCHAR" />
    <result column="MANAGEMENT_PASSWORD" property="managementPassword" jdbcType="VARCHAR" />
    <result column="SECRET_KEY" property="secretKey" jdbcType="VARCHAR" />
    <result column="UUID" property="uuid" jdbcType="VARCHAR" />
    <result column="MONITOR_NODE_ID" property="monitorNodeId" jdbcType="VARCHAR" />
    <result column="MONITOR_STATUS" property="monitorStatus" jdbcType="VARCHAR" />
    <result column="MONITOR_STATUS_NAME" property="monitorStatusName" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="STATUS_NAME" property="statusName" jdbcType="VARCHAR" />
    <result column="VM_IP" property="vmIp" jdbcType="VARCHAR" />
    <result column="CREATED_BY" property="createdBy" jdbcType="VARCHAR" />
    <result column="CREATED_DT" property="createdDt" jdbcType="TIMESTAMP" />
    <result column="UPDATED_BY" property="updatedBy" jdbcType="VARCHAR" />
    <result column="UPDATED_DT" property="updatedDt" jdbcType="TIMESTAMP" />
    <result column="VERSION" property="version" jdbcType="BIGINT" />
    <result column="MGT_OBJ_SID" property="mgtObjSid" jdbcType="BIGINT" />
    <result column="MGT_OBJ_NAME" property="mgtObjName" jdbcType="VARCHAR" />
    <result column="PARENT_MGT_OBJ_SID" property="parentMgtObjSid" jdbcType="BIGINT" />
    <result column="PARENT_MGT_OBJ_NAME" property="parentMgtObjName" jdbcType="VARCHAR" />
    <result column="MGT_OBJ_LEVEL" property="mgtObjLevel" jdbcType="BIGINT" />
    <result column="STORAGE" property="storage" jdbcType="BIGINT" />
    <result column="DREDGE_DATE" property="dredgeDate" jdbcType="TIMESTAMP" />
    <result column="INSTANCE_SID" property="instanceSid" jdbcType="BIGINT" />
    
    <result column="STA_TOTAL_VM" property="staTotalVm" jdbcType="INTEGER" />
    <result column="STA_NORMAL_VM" property="staNormalVm" jdbcType="INTEGER" />
    <result column="STA_DOWN_VM" property="staDownVm" jdbcType="INTEGER" />
    <result column="STA_PAUSE_VM" property="staPauseVm" jdbcType="INTEGER" />
    <result column="STA_OTHERS_VM" property="staOthersVm" jdbcType="INTEGER" />
    <result column="STA_VM_DISK" property="staVmDisk" jdbcType="INTEGER" />
    <result column="ORG_NAME" property="orgName" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    
    <result column="CPU_USE_RATE" property="cpuUseRate" jdbcType="VARCHAR" />
    <result column="MEMORY_USE_RATE" property="memoryUseRate" jdbcType="VARCHAR" />
    <result column="STORAGE_USE_RATE" property="storageUseRate" jdbcType="VARCHAR" />
    <result column="VM_DISK_SIZE" property="vmDiskSize" jdbcType="VARCHAR" />
    <result column="INSTANCE_NAME" property="instanceName" jdbcType="VARCHAR" />
    <result column="INSTANCE_STATUS" property="instanceStatus" jdbcType="VARCHAR" />
    <result column="INSTANCE_STATUS_NAME" property="instanceStatusName" jdbcType="VARCHAR" />
    <result column="IS_FREE_NAME" property="isFreeName" jdbcType="VARCHAR" />
    <result column="IS_FREE" property="isFree" jdbcType="BIGINT" />
    
  </resultMap>
  <sql id="Example_Where_Clause" >
    <trim prefix="where" prefixOverrides="and|or" >
      <if test="condition.vmName != null" >
         and A.VM_NAME = #{condition.vmName}
      </if>
      <if test="condition.vmNameLike != null">
		 and A.VM_NAME like concat('%', #{condition.vmNameLike},'%')
	  </if>
	  <if test="condition.vmIpLike != null">
		 and A.VM_IP like concat('%', #{condition.vmIpLike},'%')
	  </if>
	  <if test="condition.bizNameLike != null">
		 and A.BIZ_NAME like concat('%', #{condition.bizNameLike},'%')
	  </if>
      <if test="condition.cpuCores != null" >
         and A.CPU_CORES = #{condition.cpuCores}
      </if>
      <if test="condition.memorySize != null" >
         and A.MEMORY_SIZE = #{condition.memorySize}
      </if>
      <if test="condition.osVersion != null" >
         and A.OS_VERSION = #{condition.osVersion}
      </if>
      <if test="condition.allocateResHostSid != null" >
         and A.ALLOCATE_RES_HOST_SID = #{condition.allocateResHostSid}
      </if>
      <if test="condition.managementAccount != null" >
         and A.MANAGEMENT_ACCOUNT = #{condition.managementAccount}
      </if>
      <if test="condition.managementPassword != null" >
         and A.MANAGEMENT_PASSWORD = #{condition.managementPassword}
      </if>
      <if test="condition.secretKey != null" >
         and A.SECRET_KEY = #{condition.secretKey}
      </if>
      <if test="condition.uuid != null" >
         and A.UUID = #{condition.uuid}
      </if>
      <if test="condition.monitorNodeId != null" >
         and A.MONITOR_NODE_ID = #{condition.monitorNodeId}
      </if>
      <if test="condition.monitorNodeIds != null" >
         and A.MONITOR_NODE_ID in (${condition.monitorNodeIds})
      </if>
      <if test="condition.status != null" >
         and A.STATUS = #{condition.status}
      </if>
      <if test="condition.instanceStatus != null" >
         and F.STATUS = #{condition.instanceStatus}
      </if>
      <if test="condition.createdBy != null" >
         and A.CREATED_BY = #{condition.createdBy}
      </if>
      <if test="condition.createdDt != null" >
         and A.CREATED_DT = #{condition.createdDt}
      </if>
      <if test="condition.updatedBy != null" >
         and A.UPDATED_BY = #{condition.updatedBy}
      </if>
      <if test="condition.updatedDt != null" >
         and A.UPDATED_DT = #{condition.updatedDt}
      </if>
      <if test="condition.version != null" >
         and A.VERSION = #{condition.version}
      </if>
      <if test="condition.bizSid != null" >
         and A.MGT_OBJ_SID = #{condition.bizSid}
      </if>
      <if test="condition.bizSids != null" >
         and A.MGT_OBJ_SID in (${condition.bizSids})
      </if>
      <if test="condition.parentBizSid != null" >
         and A.PARENT_MGT_OBJ_SID = #{condition.parentBizSid}
      </if>
      <if test="condition.bizLevel!= null" >
         and A.MGT_OBJ_LEVEL = #{condition.bizLevel}
      </if>
      <if test="condition.bizName!= null and condition.bizName == '安徽移动'" >
         and A.MGT_OBJ_NAME is NULL
      </if>
      <if test="condition.bizNameLike!= null">
         and A.MGT_OBJ_NAME like concat('%', #{condition.bizNameLike},'%')
      </if>
      <if test="condition.parentBizName!= null" >
         and A.PARENT_MGT_OBJ_NAME = #{condition.parentBizName}
      </if>
<!--       <if test="condition.parentBizSids!= null" > -->
<!--          and FIND_IN_SET(A.BIZ_SID,getResBizChildList(#{condition.parentBizSids})) -->
<!--       </if> -->
      <if test="condition.nanotubes == 'yes'" >
         and A.RES_VM_SID not in (SELECT BIZ.RES_VM_SID FROM res_biz_vm BIZ)
      </if>
      <if test="condition.parentBizSids != null" >
         and FIND_IN_SET(A.MGT_OBJ_SID, getResBizChildList(#{condition.parentBizSids}))
      </if>
      <if test="condition.resBizVmIpLike != null" >
         and B.IP_ADDRESS like concat('%', #{condition.resBizVmIpLike},'%')
      </if>
    </trim>
  </sql>
  <sql id="Base_Column_List" >
    A.RES_VM_SID, A.VM_NAME, A.CPU_CORES, A.VM_IP, A.MEMORY_SIZE, A.ALLOCATE_RES_HOST_SID, A.ALLOCATE_RES_STORAGE_SID, A.MANAGEMENT_ACCOUNT, 
    A.MANAGEMENT_PASSWORD,A.SECRET_KEY, A.UUID, A.MONITOR_NODE_ID, A.STATUS, A.CREATED_BY, A.CREATED_DT, A.UPDATED_BY, 
    A.UPDATED_DT, A.VERSION, A.MGT_OBJ_SID, A.PARENT_MGT_OBJ_SID, A.MGT_OBJ_LEVEL, A.MGT_OBJ_NAME, A.PARENT_MGT_OBJ_NAME, A.DREDGE_DATE, A.INSTANCE_SID
  </sql>
  <select id="selectByParams" resultMap="BaseResultMap" parameterType="com.h3c.idcloud.infrastructure.common.pojo.Criteria" >
<!--     <if test="condition.parentBizSids != null" > -->
<!--         CALL getResBizChildList(#{condition.parentBizSids}); -->
<!--     </if>  -->
    select
    <if test="distinct" >
      distinct
    </if>
   	D.HOST_NAME as OWNER_HOST,
    C.CODE_DISPLAY as STATUS_NAME,
    G.CODE_DISPLAY as OS_VERSION,
    F.`STATUS` as INSTANCE_STATUS,
    H.CODE_DISPLAY as INSTANCE_STATUS_NAME,
    I.CODE_DISPLAY as IS_FREE_NAME,
    (case A.MONITOR_NODE_ID
		 when NULL then '01'
		 else '02'
    end) as MONITOR_STATUS,
    (case A.MONITOR_NODE_ID
		 when NULL then '未监控'
		 else '已监控'
    end) as MONITOR_STATUS_NAME,
<!--     CONCAT(TRUNCATE(IFNULL(((VM.USE_CPU_GHZ/1024)/(VM.CPU_CORES*VM.CPU_GHZ))*100,0) , 2),'%') as CPU_USE_RATE, -->
<!--     CONCAT(TRUNCATE(IFNULL((VM.USE_MEMORY_SIZE/VM.MEMORY_SIZE)*100,0) , 2),'%') as MEMORY_USE_RATE, -->
    CONCAT(TRUNCATE(IFNULL((VM.USE_STORE_SIZE/A.VM_STORE)*100,0) , 2),'%') as STORAGE_USE_RATE,
    A.VM_STORE as VM_DISK_SIZE, 
    <include refid="Base_Column_List" />
    from res_biz_vm A
<!--     INNER JOIN tmp_resbizchildlist TMP ON (A.MGT_OBJ_SID = TMP.MGT_OBJ_SID) -->
    INNER JOIN res_vm VM ON (A.RES_VM_SID = VM.RES_VM_SID)
  
    left join sys_m_code G on (A.OS_VERSION=G.CODE_VALUE AND G.CODE_CATEGORY='OS_VERSION')
    left join sys_m_code C on (A.STATUS=C.CODE_VALUE AND C.CODE_CATEGORY='RES_VM_STATUS')
    left join res_host D ON (A.ALLOCATE_RES_HOST_SID = D.RES_HOST_SID)
    left join service_instance F on (F.INSTANCE_SID = A.INSTANCE_SID)
	left join sys_m_code H on (H.CODE_CATEGORY = 'SERVICE_INASTANCE_STATUS' AND F.`STATUS` = H.CODE_VALUE)
	left join sys_m_code I on (I.CODE_CATEGORY = 'SERVICE_INSTANCE_FREE' AND F.IS_FREE = I.CODE_VALUE)
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    GROUP BY A.RES_VM_SID
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="common.Mysql_Pagination_Limit" />
  </select>
  
  <select id="selectByParamsForPortal" resultMap="BaseResultMap" parameterType="com.h3c.idcloud.infrastructure.common.pojo.Criteria" >
    select
    <if test="distinct" >
      distinct
    </if>
   	D.HOST_NAME as OWNER_HOST,
    C.CODE_DISPLAY as STATUS_NAME,
    G.CODE_DISPLAY as OS_VERSION,
    F.INSTANCE_NAME as INSTANCE_NAME,
    F.`STATUS` as INSTANCE_STATUS,
    F.IS_FREE as IS_FREE,
    H.CODE_DISPLAY as INSTANCE_STATUS_NAME,
    I.CODE_DISPLAY as IS_FREE_NAME,
    (case A.MONITOR_NODE_ID
		 when NULL then '01'
		 else '02'
    end) as MONITOR_STATUS,
    (case A.MONITOR_NODE_ID
		 when NULL then '未监控'
		 else '已监控'
    end) as MONITOR_STATUS_NAME,
    CONCAT(TRUNCATE(IFNULL((VM.USE_STORE_SIZE/A.VM_STORE)*100,0) , 2),'%') as STORAGE_USE_RATE,
    A.VM_STORE as VM_DISK_SIZE, 
    <include refid="Base_Column_List" />
    from res_biz_vm A
    INNER JOIN res_vm VM ON (A.RES_VM_SID = VM.RES_VM_SID)
  
    left join sys_m_code G on (A.OS_VERSION=G.CODE_VALUE AND G.CODE_CATEGORY='OS_VERSION')
    left join sys_m_code C on (A.STATUS=C.CODE_VALUE AND C.CODE_CATEGORY='RES_VM_STATUS')
    left join res_host D ON (A.ALLOCATE_RES_HOST_SID = D.RES_HOST_SID)
    left join service_instance F on (F.INSTANCE_SID = A.INSTANCE_SID)
	left join sys_m_code H on (H.CODE_CATEGORY = 'SERVICE_INASTANCE_STATUS' AND F.`STATUS` = H.CODE_VALUE)
	left join sys_m_code I on (I.CODE_CATEGORY = 'SERVICE_INSTANCE_FREE' AND F.IS_FREE = I.CODE_VALUE)
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    GROUP BY A.RES_VM_SID
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="common.Mysql_Pagination_Limit" />
  </select>
  
  <select id="selectNanotubeableVmInBiz" resultMap="BaseResultMap" parameterType="com.h3c.idcloud.infrastructure.common.pojo.Criteria" >
	    select
	      A.RES_VM_SID as RES_VM_SID,
		  A.VM_NAME as VM_NAME,
   		  A.OS_VERSION as OS_VERSION,
    	  A.CPU_CORES as CPU_CORES,
   		  A.MEMORY_SIZE as MEMORY_SIZE,
    	  C.CODE_DISPLAY as STATUS_NAME,
    	  GROUP_CONCAT(B.IP_ADDRESS) as VM_IP
	    from res_vm A
	    LEFT JOIN res_vm_network B ON (A.RES_VM_SID = B.RES_VM_SID)
	 	LEFT JOIN sys_m_code C on (A.STATUS=C.CODE_VALUE AND C.CODE_CATEGORY='RES_VM_STATUS')
	    <if test="_parameter != null" >
	      <include refid="Example_Where_Clause" />
	    </if>
	    GROUP BY A.RES_VM_SID
	    <if test="orderByClause != null" >
	      order by ${orderByClause}
	    </if>
  </select>
  
  <select id="selectByParams2" resultMap="BaseResultMap" parameterType="com.h3c.idcloud.infrastructure.common.pojo.Criteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    O.ORG_NAME,
    F.ALLOCATE_DISK_SIZE AS STORAGE,
    B.NAME as NAME,
    C.CODE_DISPLAY AS STATUS_NAME,
    <include refid="Base_Column_List" />
    from res_biz_vm A
    LEFT JOIN (select R.RES_VM_SID,SUM(R.ALLOCATE_DISK_SIZE) as ALLOCATE_DISK_SIZE 
    			from res_vd R GROUP BY R.RES_VM_SID) F ON(A.RES_VM_SID = F.RES_VM_SID)
	LEFT JOIN (select OB.*,GROUP_CONCAT(MO.ORG_NAME) as ORG_NAME 
				from sys_m_org_biz OB 
				LEFT JOIN sys_m_org MO on OB.ORG_SID = MO.ORG_SID 
			GROUP BY OB.BIZ_SID ) O on (O.BIZ_SID = A.MGT_OBJ_SID)
    LEFT JOIN sys_m_mgt_obj B ON B.MGT_OBJ_SID = A.MGT_OBJ_SID
    LEFT JOIN sys_m_code C on C.CODE_VALUE = A.STATUS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    GROUP BY A.RES_VM_SID
    ORDER BY B.CREATED_DT,B.`NAME`,A.VM_NAME
  </select>
  
  <select id="selectByParamsForList" resultMap="BaseResultMap" parameterType="com.h3c.idcloud.infrastructure.common.pojo.Criteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    F.ALLOCATE_DISK_SIZE AS STORAGE,B.NAME as NAME,
    <include refid="Base_Column_List" />
    from res_biz_vm A
    LEFT JOIN sys_m_biz B on B.BIZ_SID = A.BIZ_SID 
    LEFT JOIN (select R.RES_VM_SID,SUM(R.ALLOCATE_DISK_SIZE) as ALLOCATE_DISK_SIZE 
    			from res_vd R GROUP BY R.RES_VM_SID) F ON(A.RES_VM_SID = F.RES_VM_SID)
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    GROUP BY A.RES_VM_SID
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="statisticalBizOfVM" resultMap="BaseResultMap" parameterType="java.lang.Long" >
<!--      	CALL getResBizChildList(#{resBizSid}); -->
     	
     	SELECT
			COUNT(DISTINCT A.RES_VM_SID) as STA_TOTAL_VM,
			sum(IF(A.`STATUS` = 'normal',1,0)) as STA_NORMAL_VM,
			sum(IF(A.`STATUS` = 'poweredOff',1,0)) as STA_DOWN_VM,
			sum(IF(A.`STATUS` = 'suspended',1,0)) as STA_PAUSE_VM,
			sum(IF(A.`STATUS` != 'normal' and A.`STATUS` != 'poweredOff' and A.`STATUS` != 'suspended',1,0)) as STA_OTHERS_VM,
			SUM(A.CPU_CORES) as CPU_CORES,
			ROUND(SUM(A.MEMORY_SIZE)/1024,2) as MEMORY_SIZE,
			SUM(A.DISK_SIZE) as STA_VM_DISK
		FROM
		(
			SELECT 
			      A.RES_VM_SID,
			      SUM(VD.ALLOCATE_DISK_SIZE) as DISK_SIZE,
			      A.CPU_CORES,
				  A.MEMORY_SIZE,
			      A.`STATUS`
			FROM
				res_biz_vm A
<!-- 			  INNER JOIN tmp_resbizchildlist TMP ON (A.MGT_OBJ_SID = TMP.MGT_OBJ_SID) -->
			  LEFT JOIN (
					SELECT
						 VD.RES_VM_SID,
						 sum(VD.ALLOCATE_DISK_SIZE) as ALLOCATE_DISK_SIZE
					FROM
					res_vd VD 
					GROUP BY VD.RES_VM_SID
			)VD on (A.RES_VM_SID = VD.RES_VM_SID)
			WHERE A.`STATUS` != 'deleted' 
			AND FIND_IN_SET(A.MGT_OBJ_SID, getResBizChildList(#{resBizSid}))
			GROUP BY A.RES_VM_SID
     	)A


  </select>
  
  <select id="selectByParamsForReport" resultMap="BaseResultMap" parameterType="com.h3c.idcloud.infrastructure.common.pojo.Criteria" >
   select * from (
    select
    <if test="distinct" >
      distinct
    </if>
   	D.HOST_NAME as OWNER_HOST,
    C.CODE_DISPLAY as STATUS_NAME,
    F.ALLOCATE_DISK_SIZE AS STORAGE,
    <include refid="Base_Column_List" />
    from res_biz_vm A
    left join sys_m_code C on (A.STATUS=C.CODE_VALUE AND C.CODE_CATEGORY='RES_VM_STATUS')
    left join res_host D ON (A.ALLOCATE_RES_HOST_SID = D.RES_HOST_SID)
    <if test="condition.resTopologySid != null and condition.resTopologyType != 'HOST'" >
         INNER JOIN (select H.* from res_host H WHERE FIND_IN_SET(H.PARENT_TOPOLOGY_SID,getResTopologyChildList(#{condition.resTopologySid}))) B ON (B.RES_HOST_SID = A.ALLOCATE_RES_HOST_SID)
    </if>
    LEFT JOIN (select R.RES_VM_SID,SUM(R.ALLOCATE_DISK_SIZE) as ALLOCATE_DISK_SIZE 
    			from res_vd R GROUP BY R.RES_VM_SID) F ON(A.RES_VM_SID = F.RES_VM_SID)
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    GROUP BY A.RES_VM_SID ) tmp
    where tmp.PARENT_BIZ_SID is not null
    order by tmp.PARENT_BIZ_SID ASC
  </select>
  
  <select id="selectSumByParams" resultMap="BaseResultMap" parameterType="com.h3c.idcloud.infrastructure.common.pojo.Criteria" >
    SELECT SUM(F.ALLOCATE_DISK_SIZE) AS STORAGE,
		   SUM(A.CPU_CORES) AS CPU_CORES,
		   SUM(A.MEMORY_SIZE) AS MEMORY_SIZE
	FROM res_biz_vm A
	LEFT JOIN (
				SELECT R.RES_VM_SID, SUM(R.ALLOCATE_DISK_SIZE) AS ALLOCATE_DISK_SIZE
				FROM res_vd R
				GROUP BY R.RES_VM_SID
			 ) F ON (A.RES_VM_SID = F.RES_VM_SID)
	<if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from res_biz_vm A
    where A.RES_VM_SID = #{resBizVmSid}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from res_biz_vm
    where RES_VM_SID = #{resBizVmSid}
  </delete>
  <delete id="deleteByParams" parameterType="com.h3c.idcloud.infrastructure.common.pojo.Criteria" >
    delete from res_vm
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.h3c.idcloud.core.pojo.dto.res.ResBizVm" >
    insert into res_vm (RES_VM_SID, VM_NAME, CPU_CORES, MEMORY_SIZE, ALLOCATE_RES_HOST_SID, 
      MANAGEMENT_ACCOUNT, MANAGEMENT_PASSWORD, OS_VERSION,SECRET_KEY, UUID,STATUS, MONITOR_NODE_ID, 
      CREATED_BY, CREATED_DT, UPDATED_BY, UPDATED_DT, VERSION)
    values (#{resBizVmSid}, #{vmName}, #{cpuCores}, #{memorySize}, #{allocateResHostSid}, 
      #{managementAccount}, #{managementPassword}, #{osVersion}, #{secretKey}, #{uuid}, #{status}, #{monitorNodeId}, 
      #{createdBy}, #{createdDt}, #{updatedBy}, #{updatedDt}, #{version})
  </insert>
  <insert id="insertSelective" parameterType="com.h3c.idcloud.core.pojo.dto.res.ResBizVm" >
  <selectKey resultType="java.lang.Long" keyProperty="resBizVmSid" order="BEFORE" >
      SELECT NEXTVAL('SEQ_RES_VM')
    </selectKey>
    insert into res_biz_vm
    <trim prefix="(" suffix=")" suffixOverrides="," >
        RES_VM_SID,
      <if test="vmName != null" >
        VM_NAME,
      </if>
      <if test="cpuCores != null" >
        CPU_CORES,
      </if>
      <if test="memorySize != null" >
        MEMORY_SIZE,
      </if>
      <if test="allocateResHostSid != null" >
        ALLOCATE_RES_HOST_SID,
      </if>
      <if test="managementAccount != null" >
        MANAGEMENT_ACCOUNT,
      </if>
      <if test="managementPassword != null" >
        MANAGEMENT_PASSWORD,
      </if>
      <if test="osVersion != null" >
        OS_VERSION,
      </if>
      <if test="secretKey != null" >
        SECRET_KEY,
      </if>
      <if test="uuid != null" >
        UUID,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="monitorNodeId != null" >
        MONITOR_NODE_ID,
      </if>
      <if test="createdBy != null" >
        CREATED_BY,
      </if>
      <if test="createdDt != null" >
        CREATED_DT,
      </if>
      <if test="updatedBy != null" >
        UPDATED_BY,
      </if>
      <if test="updatedDt != null" >
        UPDATED_DT,
      </if>
      <if test="version != null" >
        VERSION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
        #{resBizVmSid},
      <if test="vmName != null" >
        #{vmName},
      </if>
      <if test="cpuCores != null" >
        #{cpuCores},
      </if>
      <if test="memorySize != null" >
        #{memorySize},
      </if>
      <if test="allocateResHostSid != null" >
        #{allocateResHostSid},
      </if>
      <if test="managementAccount != null" >
        #{managementAccount},
      </if>
      <if test="managementPassword != null" >
        #{managementPassword},
      </if>
      <if test="osVersion != null" >
        #{osVersion},
      </if>
      <if test="secretKey != null" >
        #{secretKey},
      </if>
      <if test="uuid != null" >
        #{uuid},
      </if>
      <if test="status != null" >
        #{status},
      </if>
      <if test="monitorNodeId != null" >
        #{monitorNodeId},
      </if>
      <if test="createdBy != null" >
        #{createdBy},
      </if>
      <if test="createdDt != null" >
        #{createdDt},
      </if>
      <if test="updatedBy != null" >
        #{updatedBy},
      </if>
      <if test="updatedDt != null" >
        #{updatedDt},
      </if>
      <if test="version != null" >
        #{version},
      </if>
    </trim>
  </insert>
  <select id="countByParams" parameterType="com.h3c.idcloud.infrastructure.common.pojo.Criteria" resultType="java.lang.Integer" >
<!--     <if test="condition.parentBizSids != null" > -->
<!--         CALL getResBizChildList(#{condition.parentBizSids}); -->
<!--     </if>  -->
    select count(*) from res_biz_vm A
<!--     INNER JOIN tmp_resbizchildlist TMP ON (A.MGT_OBJ_SID = TMP.MGT_OBJ_SID) -->
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByParamsSelective" parameterType="map" >
    update res_vm
    <set >
      <if test="record.resBizVmSid != null" >
        RES_VM_SID = #{record.resBizVmSid},
      </if>
      <if test="record.vmName != null" >
        VM_NAME = #{record.vmName},
      </if>
      <if test="record.cpuCores != null" >
        CPU_CORES = #{record.cpuCores},
      </if>
      <if test="record.memorySize != null" >
        MEMORY_SIZE = #{record.memorySize},
      </if>
      <if test="record.allocateResHostSid != null" >
        ALLOCATE_RES_HOST_SID = #{record.allocateResHostSid},
      </if>
      <if test="record.managementAccount != null" >
        MANAGEMENT_ACCOUNT = #{record.managementAccount},
      </if>
      <if test="record.managementPassword != null" >
        MANAGEMENT_PASSWORD = #{record.managementPassword},
      </if>
      <if test="record.osVersion != null" >
        OS_VERSION = #{record.osVersion},
      </if>
      <if test="record.secretKey != null" >
        SECRET_KEY = #{record.secretKey},
      </if>
      <if test="record.uuid != null" >
        UUID = #{record.uuid},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status},
      </if>
      <if test="record.monitorNodeId != null" >
        MONITOR_NODE_ID = #{record.monitorNodeId},
      </if>
      <if test="record.createdBy != null" >
        CREATED_BY = #{record.createdBy},
      </if>
      <if test="record.createdDt != null" >
        CREATED_DT = #{record.createdDt},
      </if>
      <if test="record.updatedBy != null" >
        UPDATED_BY = #{record.updatedBy},
      </if>
      <if test="record.updatedDt != null" >
        UPDATED_DT = #{record.updatedDt},
      </if>
      <if test="record.version != null" >
        VERSION = #{record.version},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByParams" parameterType="map" >
    update res_biz_vm
    set RES_VM_SID = #{record.resBizVmSid},
      VM_NAME = #{record.vmName},
      CPU_CORES = #{record.cpuCores},
      MEMORY_SIZE = #{record.memorySize},
      ALLOCATE_RES_HOST_SID = #{record.allocateResHostSid},
      MANAGEMENT_ACCOUNT = #{record.managementAccount},
      MANAGEMENT_PASSWORD = #{record.managementPassword},
      OS_VERSION = #{record.osVersion},
      SECRET_KEY = #{record.secretKey},
      UUID = #{record.uuid},
      STATUS = #{record.status},
      MONITOR_NODE_ID = #{record.monitorNodeId},
      CREATED_BY = #{record.createdBy},
      CREATED_DT = #{record.createdDt},
      UPDATED_BY = #{record.updatedBy},
      UPDATED_DT = #{record.updatedDt},
      VERSION = #{record.version}
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.h3c.idcloud.core.pojo.dto.res.ResBizVm" >
    update res_biz_vm
    <set >
      <if test="vmName != null" >
        VM_NAME = #{vmName},
      </if>
      <if test="cpuCores != null" >
        CPU_CORES = #{cpuCores},
      </if>
      <if test="memorySize != null" >
        MEMORY_SIZE = #{memorySize},
      </if>
      <if test="allocateResHostSid != null" >
        ALLOCATE_RES_HOST_SID = #{allocateResHostSid},
      </if>
      <if test="managementAccount != null" >
        MANAGEMENT_ACCOUNT = #{managementAccount},
      </if>
      <if test="managementPassword != null" >
        MANAGEMENT_PASSWORD = #{managementPassword},
      </if>
      <if test="osVersion != null" >
        OS_VERSION = #{osVersion},
      </if>
      <if test="secretKey != null" >
        SECRET_KEY = #{secretKey},
      </if>
      <if test="uuid != null" >
        UUID = #{uuid},
      </if>
      <if test="status != null" >
        STATUS = #{status},
      </if>
      <if test="monitorNodeId != null" >
        MONITOR_NODE_ID = #{monitorNodeId},
      </if>
      <if test="status != null" >
        STATUS = #{status},
      </if>
      <if test="createdBy != null" >
        CREATED_BY = #{createdBy},
      </if>
      <if test="createdDt != null" >
        CREATED_DT = #{createdDt},
      </if>
      <if test="updatedBy != null" >
        UPDATED_BY = #{updatedBy},
      </if>
      <if test="updatedDt != null" >
        UPDATED_DT = #{updatedDt},
      </if>
      <if test="version != null" >
        VERSION = #{version},
      </if>
    </set>
    where RES_VM_SID = #{resBizVmSid}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.h3c.idcloud.core.pojo.dto.res.ResBizVm" >
    update res_biz_vm
    set VM_NAME = #{vmName},
      CPU_CORES = #{cpuCores},
      MEMORY_SIZE = #{memorySize},
      ALLOCATE_RES_HOST_SID = #{allocateResHostSid},
      MANAGEMENT_ACCOUNT = #{managementAccount},
      MANAGEMENT_PASSWORD = #{managementPassword},
      OS_VERSION = #{osVersion},
      SECRET_KEY = #{secretKey},
      UUID = #{uuid},
      STATUS = #{status},
      MONITOR_NODE_ID = #{monitorNodeId},
      CREATED_BY = #{createdBy},
      CREATED_DT = #{createdDt},
      UPDATED_BY = #{updatedBy},
      UPDATED_DT = #{updatedDt},
      VERSION = #{version}
    where RES_VM_SID = #{resBizVmSid}
  </update>
</mapper>