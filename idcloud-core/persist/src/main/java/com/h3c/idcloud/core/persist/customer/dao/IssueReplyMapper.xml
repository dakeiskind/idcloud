<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.h3c.idcloud.core.persist.customer.dao.IssueReplyMapper" >
  <resultMap id="BaseResultMap" type="com.h3c.idcloud.core.pojo.dto.customer.IssueReply" >
    <id column="ISSUE_REPLY_SID" property="issueReplySid" jdbcType="BIGINT" />
    <result column="ISSUE_SID" property="issueSid" jdbcType="BIGINT" />
    <result column="CONTENT" property="content" jdbcType="VARCHAR" />
    <result column="REPLY_TYPE" property="replyType" jdbcType="VARCHAR" />
    <result column="CREATED_BY" property="createdBy" jdbcType="VARCHAR" />
    <result column="CREATED_DT" property="createdDt" jdbcType="TIMESTAMP" />
    <result column="UPDATED_DT" property="updatedDt" jdbcType="TIMESTAMP" />
    <result column="UPDATED_BY" property="updatedBy" jdbcType="VARCHAR" />
    <result column="VERSION" property="version" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <trim prefix="where" prefixOverrides="and|or" >
      <if test="condition.issueSid != null" >
         and ISSUE_SID = #{condition.issueSid}
      </if>
      <if test="condition.content != null" >
         and CONTENT = #{condition.content}
      </if>
      <if test="condition.replyType != null" >
         and REPLY_TYPE = #{condition.replyType}
      </if>
      <if test="condition.createdBy != null" >
         and CREATED_BY = #{condition.createdBy}
      </if>
      <if test="condition.createdDt != null" >
         and CREATED_DT = #{condition.createdDt}
      </if>
      <if test="condition.updatedDt != null" >
         and UPDATED_DT = #{condition.updatedDt}
      </if>
      <if test="condition.updatedBy != null" >
         and UPDATED_BY = #{condition.updatedBy}
      </if>
      <if test="condition.version != null" >
         and VERSION = #{condition.version}
      </if>
    </trim>
  </sql>
  <sql id="Base_Column_List" >
    ISSUE_REPLY_SID, ISSUE_SID, CONTENT, REPLY_TYPE, CREATED_BY, CREATED_DT, UPDATED_DT, 
    UPDATED_BY, VERSION
  </sql>
  <select id="selectByParams" resultMap="BaseResultMap" parameterType="com.h3c.idcloud.infrastructure.common.pojo.Criteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from issue_reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="common.Mysql_Pagination_Limit" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from issue_reply
    where ISSUE_REPLY_SID = #{issueReplySid}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from issue_reply
    where ISSUE_REPLY_SID = #{issueReplySid}
  </delete>
  <delete id="deleteByParams" parameterType="com.h3c.idcloud.infrastructure.common.pojo.Criteria" >
    delete from issue_reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.h3c.idcloud.core.pojo.dto.customer.IssueReply" >
    <selectKey resultType="java.lang.Long" keyProperty="issueReplySid" order="BEFORE" >
      SELECT NEXTVAL('SEQ_ISSUE_REPLY')
    </selectKey>
    insert into issue_reply (ISSUE_REPLY_SID, ISSUE_SID, CONTENT, REPLY_TYPE, CREATED_BY, CREATED_DT,
      UPDATED_DT, UPDATED_BY, VERSION)
    values (#{issueReplySid}, #{issueSid}, #{content}, #{replyType}, #{createdBy}, #{createdDt}, 
      #{updatedDt}, #{updatedBy}, #{version})
  </insert>
  <insert id="insertSelective" parameterType="com.h3c.idcloud.core.pojo.dto.customer.IssueReply" >
    <selectKey resultType="java.lang.Long" keyProperty="issueReplySid" order="BEFORE" >
      SELECT NEXTVAL('SEQ_ISSUE_REPLY')
    </selectKey>
    insert into issue_reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      ISSUE_REPLY_SID,
      <if test="issueSid != null" >
        ISSUE_SID,
      </if>
      <if test="content != null" >
        CONTENT,
      </if>
      <if test="replyType != null" >
        REPLY_TYPE,
      </if>
      <if test="createdBy != null" >
        CREATED_BY,
      </if>
      <if test="createdDt != null" >
        CREATED_DT,
      </if>
      <if test="updatedDt != null" >
        UPDATED_DT,
      </if>
      <if test="updatedBy != null" >
        UPDATED_BY,
      </if>
      <if test="version != null" >
        VERSION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{issueReplySid},
      <if test="issueSid != null" >
        #{issueSid},
      </if>
      <if test="content != null" >
        #{content},
      </if>
      <if test="replyType != null" >
        #{replyType},
      </if>
      <if test="createdBy != null" >
        #{createdBy},
      </if>
      <if test="createdDt != null" >
        #{createdDt},
      </if>
      <if test="updatedDt != null" >
        #{updatedDt},
      </if>
      <if test="updatedBy != null" >
        #{updatedBy},
      </if>
      <if test="version != null" >
        #{version},
      </if>
    </trim>
  </insert>
  <select id="countByParams" parameterType="com.h3c.idcloud.infrastructure.common.pojo.Criteria" resultType="java.lang.Integer" >
    select count(*) from issue_reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByParamsSelective" parameterType="map" >
    update issue_reply
    <set >
      <if test="record.issueReplySid != null" >
        ISSUE_REPLY_SID = #{record.issueReplySid},
      </if>
      <if test="record.issueSid != null" >
        ISSUE_SID = #{record.issueSid},
      </if>
      <if test="record.content != null" >
        CONTENT = #{record.content},
      </if>
      <if test="record.replyType != null" >
        REPLY_TYPE = #{record.replyType},
      </if>
      <if test="record.createdBy != null" >
        CREATED_BY = #{record.createdBy},
      </if>
      <if test="record.createdDt != null" >
        CREATED_DT = #{record.createdDt},
      </if>
      <if test="record.updatedDt != null" >
        UPDATED_DT = #{record.updatedDt},
      </if>
      <if test="record.updatedBy != null" >
        UPDATED_BY = #{record.updatedBy},
      </if>
      <if test="record.version != null" >
        VERSION = #{record.version},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByParams" parameterType="map" >
    update issue_reply
    set ISSUE_REPLY_SID = #{record.issueReplySid},
      ISSUE_SID = #{record.issueSid},
      CONTENT = #{record.content},
      REPLY_TYPE = #{record.replyType},
      CREATED_BY = #{record.createdBy},
      CREATED_DT = #{record.createdDt},
      UPDATED_DT = #{record.updatedDt},
      UPDATED_BY = #{record.updatedBy},
      VERSION = #{record.version}
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.h3c.idcloud.core.pojo.dto.customer.IssueReply" >
    update issue_reply
    <set >
      <if test="issueSid != null" >
        ISSUE_SID = #{issueSid},
      </if>
      <if test="content != null" >
        CONTENT = #{content},
      </if>
      <if test="replyType != null" >
        REPLY_TYPE = #{replyType},
      </if>
      <if test="createdBy != null" >
        CREATED_BY = #{createdBy},
      </if>
      <if test="createdDt != null" >
        CREATED_DT = #{createdDt},
      </if>
      <if test="updatedDt != null" >
        UPDATED_DT = #{updatedDt},
      </if>
      <if test="updatedBy != null" >
        UPDATED_BY = #{updatedBy},
      </if>
      <if test="version != null" >
        VERSION = #{version},
      </if>
    </set>
    where ISSUE_REPLY_SID = #{issueReplySid}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.h3c.idcloud.core.pojo.dto.customer.IssueReply" >
    update issue_reply
    set ISSUE_SID = #{issueSid},
      CONTENT = #{content},
      REPLY_TYPE = #{replyType},
      CREATED_BY = #{createdBy},
      CREATED_DT = #{createdDt},
      UPDATED_DT = #{updatedDt},
      UPDATED_BY = #{updatedBy},
      VERSION = #{version}
    where ISSUE_REPLY_SID = #{issueReplySid}
  </update>
</mapper>